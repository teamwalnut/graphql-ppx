// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Gql = require("gql").default;
var Caml_format = require("rescript/lib/js/caml_format.js");

function parse(prim) {
  return String(prim);
}

var serialize = Caml_format.int_of_string;

var StringOfInt = {
  parse: parse,
  serialize: serialize
};

var parse$1 = Caml_format.int_of_string;

function serialize$1(prim) {
  return String(prim);
}

var IntOfString = {
  parse: parse$1,
  serialize: serialize$1
};

var Raw = {};

var query = Gql`query   {
variousScalars  {
string  
int  
}

}
`;

function parse$2(value) {
  var value$1 = value.variousScalars;
  return {
          variousScalars: {
            string: Caml_format.int_of_string(value$1.string),
            int: String(value$1.int)
          }
        };
}

function serialize$2(value) {
  var value$1 = value.variousScalars;
  var value$2 = value$1.int;
  var value$3 = Caml_format.int_of_string(value$2);
  var value$4 = value$1.string;
  var value$5 = String(value$4);
  var variousScalars = {
    string: value$5,
    int: value$3
  };
  return {
          variousScalars: variousScalars
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var MyQuery = {
  Raw: Raw,
  query: query,
  parse: parse$2,
  serialize: serialize$2,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

exports.StringOfInt = StringOfInt;
exports.IntOfString = IntOfString;
exports.MyQuery = MyQuery;
/* query Not a pure module */

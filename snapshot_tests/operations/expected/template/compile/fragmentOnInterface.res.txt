// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Gql = require("gql").default;

function deepMerge(json1, param) {
  return json1;
}

var Graphql_ppx_runtime = {
  deepMerge: deepMerge
};

var Raw = {};

var query = Gql`fragment InterfaceFragment on User   {
__typename
id  
}
`;

function parse(value) {
  return {
          id: value.id
        };
}

function serialize(value) {
  var value$1 = value.id;
  return {
          id: value$1
        };
}

function verifyArgsAndParse(_InterfaceFragment, value) {
  return {
          id: value.id
        };
}

function verifyName(param) {
  
}

var InterfaceFragment = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  verifyArgsAndParse: verifyArgsAndParse,
  verifyName: verifyName
};

var Raw$1 = {};

var query$1 = Gql`fragment AnotherFragment on User   {
__typename
id  
...InterfaceFragment   
}
${query}`;

function parse$1(value) {
  return {
          id: value["id"],
          interfaceFragment: {
            id: value.id
          }
        };
}

function serialize$1(value) {
  return [serialize(value.interfaceFragment)].reduce(deepMerge, {
              id: value.id
            });
}

function verifyArgsAndParse$1(_AnotherFragment, value) {
  return parse$1(value);
}

function verifyName$1(param) {
  
}

var AnotherFragment = {
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  verifyArgsAndParse: verifyArgsAndParse$1,
  verifyName: verifyName$1
};

var Raw$2 = {};

var query$2 = Gql`fragment AnonUser on AnonymousUser   {
id  
...InterfaceFragment   
}
${query}`;

function parse$2(value) {
  return {
          id: value["id"],
          interfaceFragment: {
            id: value.id
          }
        };
}

function serialize$2(value) {
  return [serialize(value.interfaceFragment)].reduce(deepMerge, {
              id: value.id
            });
}

function verifyArgsAndParse$2(_AnonUser, value) {
  return parse$2(value);
}

function verifyName$2(param) {
  
}

var AnonUser = {
  Raw: Raw$2,
  query: query$2,
  parse: parse$2,
  serialize: serialize$2,
  verifyArgsAndParse: verifyArgsAndParse$2,
  verifyName: verifyName$2
};

exports.Graphql_ppx_runtime = Graphql_ppx_runtime;
exports.InterfaceFragment = InterfaceFragment;
exports.AnotherFragment = AnotherFragment;
exports.AnonUser = AnonUser;
/* query Not a pure module */

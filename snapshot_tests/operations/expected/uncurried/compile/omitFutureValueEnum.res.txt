// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

function parse(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  return {
          mutationWithError: {
            errors: !(value$2 == null) ? value$2.map(function (value) {
                    var value$1 = value.field;
                    var tmp;
                    switch (value$1) {
                      case "FIRST" :
                          tmp = "FIRST";
                          break;
                      case "SECOND" :
                          tmp = "SECOND";
                          break;
                      case "THIRD" :
                          tmp = "THIRD";
                          break;
                      default:
                        tmp = {
                          NAME: "FutureAddedValue",
                          VAL: value$1
                        };
                    }
                    return {
                            message: value.message,
                            field: tmp
                          };
                  }) : undefined
          }
        };
}

function serialize(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  var errors = value$2 !== undefined ? value$2.map(function (value) {
          var value$1 = value.field;
          var field = typeof value$1 === "object" ? value$1.VAL : (
              value$1 === "THIRD" ? "THIRD" : (
                  value$1 === "SECOND" ? "SECOND" : "FIRST"
                )
            );
          var value$2 = value.message;
          return {
                  message: value$2,
                  field: field
                };
        }) : null;
  var mutationWithError = {
    errors: errors
  };
  return {
          mutationWithError: mutationWithError
        };
}

function serializeVariables() {
  
}

function makeVariables() {
  
}

function makeDefaultVariables() {
  
}

var Normal = {
  Raw: Raw,
  query: "mutation   {\nmutationWithError  {\nerrors  {\nmessage  \nfield  \n}\n\n}\n\n}\n",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var Raw$1 = {};

function parse$1(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  return {
          mutationWithError: {
            errors: !(value$2 == null) ? value$2.map(function (value) {
                    var value$1 = value.field;
                    var tmp;
                    switch (value$1) {
                      case "FIRST" :
                          tmp = "FIRST";
                          break;
                      case "SECOND" :
                          tmp = "SECOND";
                          break;
                      case "THIRD" :
                          tmp = "THIRD";
                          break;
                      default:
                        throw {
                              RE_EXN_ID: "Not_found",
                              Error: new Error()
                            };
                    }
                    return {
                            message: value.message,
                            field: tmp
                          };
                  }) : undefined
          }
        };
}

function serialize$1(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  var errors = value$2 !== undefined ? value$2.map(function (value) {
          var value$1 = value.field;
          var field = value$1 === "THIRD" ? "THIRD" : (
              value$1 === "SECOND" ? "SECOND" : "FIRST"
            );
          var value$2 = value.message;
          return {
                  message: value$2,
                  field: field
                };
        }) : null;
  var mutationWithError = {
    errors: errors
  };
  return {
          mutationWithError: mutationWithError
        };
}

function serializeVariables$1() {
  
}

function makeVariables$1() {
  
}

function makeDefaultVariables$1() {
  
}

var ByConfig = {
  Raw: Raw$1,
  query: "mutation   {\nmutationWithError  {\nerrors  {\nmessage  \nfield  \n}\n\n}\n\n}\n",
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  makeDefaultVariables: makeDefaultVariables$1
};

var Raw$2 = {};

function parse$2(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  return {
          mutationWithError: {
            errors: !(value$2 == null) ? value$2.map(function (value) {
                    var value$1 = value.field;
                    var tmp;
                    switch (value$1) {
                      case "FIRST" :
                          tmp = "FIRST";
                          break;
                      case "SECOND" :
                          tmp = "SECOND";
                          break;
                      case "THIRD" :
                          tmp = "THIRD";
                          break;
                      default:
                        throw {
                              RE_EXN_ID: "Not_found",
                              Error: new Error()
                            };
                    }
                    return {
                            message: value.message,
                            field: tmp
                          };
                  }) : undefined
          }
        };
}

function serialize$2(value) {
  var value$1 = value.mutationWithError;
  var value$2 = value$1.errors;
  var errors = value$2 !== undefined ? value$2.map(function (value) {
          var value$1 = value.field;
          var field = value$1 === "THIRD" ? "THIRD" : (
              value$1 === "SECOND" ? "SECOND" : "FIRST"
            );
          var value$2 = value.message;
          return {
                  message: value$2,
                  field: field
                };
        }) : null;
  var mutationWithError = {
    errors: errors
  };
  return {
          mutationWithError: mutationWithError
        };
}

function serializeVariables$2() {
  
}

function makeVariables$2() {
  
}

function makeDefaultVariables$2() {
  
}

var ByDirective = {
  Raw: Raw$2,
  query: "mutation   {\nmutationWithError  {\nerrors  {\nmessage  \nfield  \n}\n\n}\n\n}\n",
  parse: parse$2,
  serialize: serialize$2,
  serializeVariables: serializeVariables$2,
  makeVariables: makeVariables$2,
  makeDefaultVariables: makeDefaultVariables$2
};

exports.Normal = Normal;
exports.ByConfig = ByConfig;
exports.ByDirective = ByDirective;
/* No side effect */

// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_module = require("rescript/lib/js/caml_module.js");

var MyQuery = {};

var MyQuery2 = {};

var VariousScalars = Caml_module.init_mod([
      "module_type.res",
      44,
      4
    ], {
      TAG: "Module",
      _0: [
        [
          "Function",
          "parse"
        ],
        [
          "Function",
          "serialize"
        ]
      ]
    });

var Raw = {};

function parse(value) {
  var value$1 = value.nestedObject;
  var value$2 = value$1.inner;
  var tmp;
  if (value$2 == null) {
    tmp = undefined;
  } else {
    var value$3 = value$2.inner;
    tmp = {
      inner: !(value$3 == null) ? ({
            field: value$3.field
          }) : undefined
    };
  }
  return {
          nestedObject: VariousScalars.parse({
                inner: tmp
              })
        };
}

function serialize(value) {
  var value$1 = value.nestedObject;
  var value$2 = VariousScalars.serialize(value$1);
  var value$3 = value$2.inner;
  var inner;
  if (value$3 !== undefined) {
    var value$4 = value$3.inner;
    var inner$1;
    if (value$4 !== undefined) {
      var value$5 = value$4.field;
      inner$1 = {
        field: value$5
      };
    } else {
      inner$1 = null;
    }
    inner = {
      inner: inner$1
    };
  } else {
    inner = null;
  }
  var nestedObject = {
    inner: inner
  };
  return {
          nestedObject: nestedObject
        };
}

function serializeVariables() {
  
}

function makeVariables() {
  
}

function makeDefaultVariables() {
  
}

var MyQueryRecursive = {
  Raw: Raw,
  query: "query   {\nnestedObject  {\ninner  {\ninner  {\nfield  \n}\n\n}\n\n}\n\n}\n",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

function parse$1(nestedObject) {
  return {
          otherInner: nestedObject.inner
        };
}

function serialize$1(t) {
  return {
          inner: t.otherInner
        };
}

Caml_module.update_mod({
      TAG: "Module",
      _0: [
        [
          "Function",
          "parse"
        ],
        [
          "Function",
          "serialize"
        ]
      ]
    }, VariousScalars, {
      parse: parse$1,
      serialize: serialize$1
    });

exports.MyQuery = MyQuery;
exports.MyQuery2 = MyQuery2;
exports.MyQueryRecursive = MyQueryRecursive;
exports.VariousScalars = VariousScalars;
/* VariousScalars Not a pure module */

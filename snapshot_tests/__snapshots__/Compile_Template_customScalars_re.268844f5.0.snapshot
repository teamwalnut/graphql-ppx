Compile Template › customScalars.re › output
// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require(\"rescript/lib/js/caml_option.js\");

var Raw = {};

var query = (require(\"gql\")`
  query ($opt: CustomScalar, $req: CustomScalar!)  {
    customScalarField(argOptional: $opt, argRequired: $req)  {
      nullable
      nonNullable
    }
  }
`);

function parse(value) {
  var value$1 = value.customScalarField;
  var value$2 = value$1.nullable;
  return {
          customScalarField: {
            nullable: !(value$2 == null) ? Caml_option.some(value$2) : undefined,
            nonNullable: value$1.nonNullable
          }
        };
}

function serialize(value) {
  var value$1 = value.customScalarField;
  var value$2 = value$1.nonNullable;
  var value$3 = value$1.nullable;
  var nullable = value$3 !== undefined ? Caml_option.valFromOption(value$3) : null;
  var customScalarField = {
    nullable: nullable,
    nonNullable: value$2
  };
  return {
          customScalarField: customScalarField
        };
}

function serializeVariables(inp) {
  var a = inp.opt;
  return {
          opt: a !== undefined ? Caml_option.valFromOption(a) : undefined,
          req: inp.req
        };
}

function makeVariables(opt, req, param) {
  return {
          opt: opt,
          req: req
        };
}

var MyQuery = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables
};

exports.MyQuery = MyQuery;
/* query Not a pure module */


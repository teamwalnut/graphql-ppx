Compile Records › unionPartial.re › output
// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

function parse(value) {
  var value$1 = value.dogOrHuman;
  var typename = value$1[\"__typename\"];
  var tmp = typename === \"Dog\" ? ({
        NAME: \"Dog\",
        VAL: {
          name: value$1.name,
          barkVolume: value$1.barkVolume
        }
      }) : ({
        NAME: \"FutureAddedValue\",
        VAL: value$1
      });
  return {
          dogOrHuman: tmp
        };
}

function serialize(value) {
  var value$1 = value.dogOrHuman;
  var dogOrHuman;
  if (value$1.NAME === \"Dog\") {
    var value$2 = value$1.VAL;
    var value$3 = value$2.barkVolume;
    var value$4 = value$2.name;
    dogOrHuman = {
      __typename: \"Dog\",
      name: value$4,
      barkVolume: value$3
    };
  } else {
    dogOrHuman = value$1.VAL;
  }
  return {
          dogOrHuman: dogOrHuman
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var MyQuery = {
  Raw: Raw,
  query: \"query   {\\ndogOrHuman  {\\n__typename\\n...on Dog   {\\nname  \\nbarkVolume  \\n}\\n\\n}\\n\\n}\\n\",
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

exports.MyQuery = MyQuery;
/* No side effect */


Compile Apollo › fragmentvariableinput.re › output
// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

function parse(value) {
  var value$1 = value.reposts;
  return {
          __typename: value.__typename,
          reposts: value$1.map(function (value) {
                if (!(value == null)) {
                  return {
                          __typename: value.__typename,
                          id: value.id
                        };
                }
                
              })
        };
}

function serialize(value) {
  var value$1 = value.reposts;
  var reposts = value$1.map(function (value) {
        if (value === undefined) {
          return null;
        }
        var value$1 = value.id;
        var value$2 = value.__typename;
        return {
                __typename: value$2,
                id: value$1
              };
      });
  var value$2 = value.__typename;
  return {
          __typename: value$2,
          reposts: reposts
        };
}

function verifyArgsAndParse(_name, _test, value) {
  return parse(value);
}

function verifyName(param) {
  
}

var Test = {
  Raw: Raw,
  query: \"fragment test on Post   {\\n__typename  \\nreposts(arg: {name: $name})  {\\n__typename  \\nid  \\n}\\n\\n}\\n\",
  parse: parse,
  serialize: serialize,
  verifyArgsAndParse: verifyArgsAndParse,
  verifyName: verifyName
};

exports.Test = Test;
/* No side effect */


Compile Template › listsInput.re › output
// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


var Raw = {};

var query = (require(\"gql\")`
  query ($arg: ListsInput!)  {
    listsInput(arg: $arg)
  }
`);

function parse(value) {
  return {
          listsInput: value.listsInput
        };
}

function serialize(value) {
  var value$1 = value.listsInput;
  return {
          listsInput: value$1
        };
}

function serializeInputObjectListsInput(inp) {
  var a = inp.nullableOfNullable;
  var a$1 = inp.nullableOfNonNullable;
  var a$2 = inp.nonNullableOfNullable;
  var a$3 = inp.nonNullableOfNonNullable;
  return {
          nullableOfNullable: a !== undefined ? a.map(function (b) {
                  if (b !== undefined) {
                    return b;
                  }
                  
                }) : undefined,
          nullableOfNonNullable: a$1 !== undefined ? a$1.map(function (b) {
                  return b;
                }) : undefined,
          nonNullableOfNullable: a$2.map(function (b) {
                if (b !== undefined) {
                  return b;
                }
                
              }),
          nonNullableOfNonNullable: a$3.map(function (b) {
                return b;
              })
        };
}

function serializeVariables(inp) {
  return {
          arg: serializeInputObjectListsInput(inp.arg)
        };
}

function makeVariables(arg, param) {
  return {
          arg: arg
        };
}

function makeInputObjectListsInput(nullableOfNullable, nullableOfNonNullable, nonNullableOfNullable, nonNullableOfNonNullable, param) {
  return {
          nullableOfNullable: nullableOfNullable,
          nullableOfNonNullable: nullableOfNonNullable,
          nonNullableOfNullable: nonNullableOfNullable,
          nonNullableOfNonNullable: nonNullableOfNonNullable
        };
}

var MyQuery = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  serializeInputObjectListsInput: serializeInputObjectListsInput,
  makeVariables: makeVariables,
  makeInputObjectListsInput: makeInputObjectListsInput
};

exports.MyQuery = MyQuery;
/* query Not a pure module */

